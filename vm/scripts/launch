#!/bin/sh
set -e

rootdir=/etc/vm
name="$1"
. "$rootdir/utils.sh"

# Read files.
file="$(basename "$name.conf")"
conf="$(resolve_includes "$rootdir/conf" "$rootdir/conf/$file")"
params="$(resolve_includes "$rootdir/include" "$rootdir/machines.d/$file")"

# Set configuration
while read -r k v ; do
	eval "conf_$k=$v"
done <<EOF
$conf
EOF

# Expand parameters.
params="$(expand "$params")"

# Build command line.
set -- qemu-system-x86_64

while read -r k v ; do
        set -- "$@" "-$k"
	if test -n "$v" ; then
		set -- "$@" "$v"
	fi
	eval "param_${k//-/_}='$v'"
done <<EOF
$params
EOF

# Setup shares.
if [ -n "$conf_shares" ]; then
	mkdir -p /run/vm/"$name"
	set -- "$@" -object memory-backend-memfd,id=mem,size="$param_m",share=on -numa node,memdev=mem
	while IFS=: read -r tag source; do
		/usr/lib/qemu/virtiofsd \
			--socket-path="/run/vm/$name/virtiofs-$tag" \
			-o source="$source" \
			-o cache=always \
			-o xattr -o posix_acl \
			-o announce_submounts \
			-f &
		set -- "$@" \
			-chardev socket,id=virtiofs-$tag,path="/run/vm/$name/virtiofs-$tag" \
			-device vhost-user-fs-device,chardev=virtiofs-$tag,tag=$tag
	done <<EOF
$conf_shares
EOF
fi

# Setup interface.
tapdev=$("$rootdir/scripts/ifup" vm-"$name")
test $? -ne 0 && exit 1

# Launch qemu.
trap "'$rootdir'/scripts/ifdown 'vm-$name'; jobs -p | xargs -r kill" EXIT
"$@" 3<>"$tapdev"
